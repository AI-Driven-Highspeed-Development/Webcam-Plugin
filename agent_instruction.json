{
    "module_name": "webcam_plugin",
    "module_description": {
        "overview": "The Webcam Plugin provides a managed interface for accessing and controlling multiple webcam devices. It integrates with the ConfigManager to load camera configurations dynamically, allowing for flexible setup without hardcoding device details. It handles camera initialization, frame capture, and resource management.",
        "key_features": [
            "Dynamically loads camera configurations from the project's config file.",
            "Provides access to multiple webcams, each identified by a unique name.",
            "Manages the lifecycle of camera resources, including initialization and release.",
            "Offers methods to retrieve individual cameras, all cameras, or just the active ones.",
            "Includes a `Webcam` class that wraps OpenCV's VideoCapture for easier use."
        ]
    },
    "usage_examples": {
        "initialize_and_get_camera": "from plugins.webcam_plugin.webcam_plugin import WebcamPlugin\n\n# Initialize the plugin\nwebcam_plugin = WebcamPlugin()\n\n# Get a specific camera by its configured name\ncamera = webcam_plugin.get_camera('cam01')\n\nif camera and camera.is_opened:\n    # Capture a frame\n    frame = camera.get_frame()\n    if frame is not None:\n        print('Frame captured successfully!')",
        "list_all_cameras": "from plugins.webcam_plugin.webcam_plugin import WebcamPlugin\n\nwebcam_plugin = WebcamPlugin()\n\n# Get all configured cameras\nall_cameras = webcam_plugin.get_all_cameras()\n\nfor name, cam in all_cameras.items():\n    print(f'Camera Found: {name}, Device ID: {cam.device_id}')",
        "simple_camera_feed_display": "from plugins.webcam_plugin.webcam_plugin import WebcamPlugin\nimport cv2\n\nwebcam_plugin = WebcamPlugin()\ncamera = webcam_plugin.get_camera('default') # Get the default camera\n\nif camera:\n    try:\n        while True:\n            frame = camera.get_frame()\n            if frame is not None:\n                cv2.imshow('Webcam Feed', frame)\n            if cv2.waitKey(1) & 0xFF == ord('q'):\n                break\n    finally:\n        camera.release()\n        cv2.destroyAllWindows()"
    },
    "warning": {
        "resource_management": "Always release camera resources using `camera.release()` or `webcam_plugin.release_all()` when you are finished to free up the hardware for other applications.",
        "opencv_dependency": "The core functionality relies on OpenCV (`cv2`). Make sure it is properly installed in your environment (`pip install opencv-python`)."
    }
}